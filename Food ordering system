#include <iostream>
#include <string>
#include <algorithm>
const int MAX_ITEMS = 100;

struct FoodItem {
    std::string name;
    int quantity;
    double price;
};

class OrderManagement {
private:
    FoodItem items[MAX_ITEMS];
    int itemCount = 0; 

public:
    void addOrder(const std::string& name, int quantity, double price) {
        if (itemCount < MAX_ITEMS) {
            items[itemCount] = {name, quantity, price};
            itemCount++;
        }
        else {
            std::cout << "Maximum order items reached" << std::endl;
        }
    }

    void updateQuantity(const std::string& name, int newQuantity) {
        auto it = std::find_if(std::begin(items), std::begin(items) + itemCount, [name](const FoodItem& item) {
            return item.name == name;
        });
        if (it != std::begin(items) + itemCount) {
            it->quantity = newQuantity;
        }
        else {
            std::cout << "Item not found in the order." << std::endl;
        }
    }

    double getTotalBill() {
        double total = 0.0;
        for (auto it = std::begin(items); it != std::begin(items) + itemCount; ++it) {
            total += it->price * it->quantity;
        }
        return total;
    }
};

int main() {
    OrderManagement order;
    while (true) {
        int choice;
        std::cin >> choice;
        if (choice == 1) {
            std::string name;
            int quantity;
            double price;
            std::cin >> name;
            std::cin >> quantity;
            std::cin >> price;
            order.addOrder(name, quantity, price);
        }
        else if (choice == 2) {
            std::string name;
            int quantity;
            std::cin >> name;
            std::cin >> quantity;
            order.updateQuantity(name, quantity);
        }
        else if (choice == 3) {
            double bill = order.getTotalBill();
            std::cout << "Total Bill: $" << bill << std::endl;
        }
        else if (choice == 4) {
            break; 
        }
        else {
            std::cout << "Invalid choice";
        }
    }
    return 0;
}
